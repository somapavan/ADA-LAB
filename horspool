//horspool
#include<iostream>
#include<cstring>
using namespace std;
char str[100],ptn[20];
int res,len,m,n,i,j,k,table[1000];
void shift(const char p[]){
    len=strlen(p);
    for(i=0;i<1000;i++)
    table[i]=len;
    for(j=0;j<=len-2;j++)
    table[p[j]]=len-1-j;
}
int horspool(const char p[],const char t[]){
    shift(p);
    m=strlen(p);
    n=strlen(t);
    i=m-1;
    while(i<=n-1){
        k=0;
        while(k<=m-1 &&(p[m-1-k]==t[i-k]))
        k++;
        if(k==m)
        return i-m+1;
        else
        i=i+table[t[i]];
    }
    return -1;
}
int main(){
    cout<<"enter the string: "<<endl;
    cin.getline(str,sizeof(str));
    cout<<"enter the patter: "<<endl;
    cin.getline(ptn,sizeof(ptn));
    res=horspool(ptn,str);
    if(res==-1)
    cout<<"pattern not found"<<endl;
    else
    cout<<"pattern found at :"<<res+1<<" position"<<endl;
    return 0;
}
